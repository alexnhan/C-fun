#include <ccc_win.h>
#include <cstdlib>
#include <ctime>
#include <cmath>

int ccc_win_main()
{
	// The area of the rectangle window is 20x20 = 400
	// The area of the circle drawn is PI*(5)^2 = 25*PI = 78.54
	// Ratio of area of circle to area of rectangle = (25*PI)/400 = 0.1963495408

	srand((unsigned int)time(0));
	Point p(0, 0);
	Circle c(p, 5);
	cwin << c;

	int counter = 0;
	for (int i = 0; i < 1000; i++) // 4000 Points will be drawn randomly, as more points drawn, more accurate
	{
		Point pRand(((10) * (rand() / (RAND_MAX + 1.0))), ((10) * (rand() / (RAND_MAX + 1.0))));
		Point nRand(((-10) * (rand() / (RAND_MAX + 1.0))), ((-10) * (rand() / (RAND_MAX + 1.0))));
		Point pnRand(((10) * (rand() / (RAND_MAX + 1.0))), ((-10) * (rand() / (RAND_MAX + 1.0))));
		Point npRand(((-10) * (rand() / (RAND_MAX + 1.0))), ((10) * (rand() / (RAND_MAX + 1.0))));
		cwin << pRand << nRand << pnRand << npRand;
		// Counting points inside the circle
		if (sqrt((pow(pRand.get_x(), 2) + pow(pRand.get_y(), 2))) <= 5)
			counter++;
		if (sqrt((pow(nRand.get_x(), 2) + pow(nRand.get_y(), 2))) <= 5)
			counter++;
		if (sqrt((pow(pnRand.get_x(), 2) + pow(pnRand.get_y(), 2))) <= 5)
			counter++;
		if (sqrt((pow(npRand.get_x(), 2) + pow(npRand.get_y(), 2))) <= 5)
			counter++;
	}

	double ratio = counter / 4000.0; // should be close to 0.1963495408
	double areaCircle = ratio * 400.0; // should be close to 25*pi = 78.54
	Point messagePointRatio(-2.5, 0);
	Point messagePointCircle(2.5, 0);
	Message ratioMessage(messagePointRatio, ratio);
	Message circleAreaMessage(messagePointCircle, areaCircle);
	cwin << ratioMessage << circleAreaMessage;
	return 0;
}
